{
  "ruleChain": {
    "additionalInfo": {
      "description": "Example on how to create an alarm, as shown in https://thingsboard.io/docs/user-guide/rule-engine-2-0/tutorials/create-clear-alarms/"
    },
    "name": "Tutorial - Create and Clear Alarms",
    "type": "CORE",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 5,
    "nodes": [
      {
        "additionalInfo": {
          "description": "Temperature must be between 20 and 38 Â°C. All others are invalid.",
          "layoutX": 558,
          "layoutY": 151
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Invalid temperature range",
        "debugMode": false,
        "singletonMode": false,
        "configurationVersion": 0,
        "configuration": {
          "scriptLang": "TBEL",
          "jsScript": "return msg.temperature > 20;",
          "tbelScript": "return msg.temperature < 20 || msg.temperature > 38;"
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 830,
          "layoutY": 65
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Create Alarm: Critical Temperature",
        "debugMode": false,
        "singletonMode": false,
        "configurationVersion": 0,
        "configuration": {
          "scriptLang": "TBEL",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n    //remove prevAlarmDetails from metadata\n    delete metadata.prevAlarmDetails;\n    //now metadata is the same as it comes IN this rule node\n}\n\n\nreturn details;",
          "alarmDetailsBuildTbel": "var details = {};\nif (metadata.prevAlarmDetails != null) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n    //remove prevAlarmDetails from metadata\n    metadata.remove('prevAlarmDetails');\n    //now metadata is the same as it comes IN this rule node\n}\n\n\nreturn details;",
          "useMessageAlarmData": false,
          "overwriteAlarmDetails": false,
          "alarmType": "Critical Temperature",
          "severity": "CRITICAL",
          "propagate": false,
          "relationTypes": [],
          "propagateToOwner": true,
          "propagateToTenant": true,
          "dynamicSeverity": false
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 841,
          "layoutY": 255
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear Alarm: Critical Temperature",
        "debugMode": false,
        "singletonMode": false,
        "configurationVersion": 0,
        "configuration": {
          "scriptLang": "TBEL",
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n    //remove prevAlarmDetails from metadata\n    delete metadata.prevAlarmDetails;\n    //now metadata is the same as it comes IN this rule node\n}\n\n\nreturn details;",
          "alarmDetailsBuildTbel": "var details = {};\nif (metadata.prevAlarmDetails != null) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n    //remove prevAlarmDetails from metadata\n    metadata.remove('prevAlarmDetails');\n    //now metadata is the same as it comes IN this rule node\n}\n\n\nreturn details;",
          "alarmType": "Critical Temperature"
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 1362,
          "layoutY": 67
        },
        "type": "org.thingsboard.rule.engine.mail.TbSendEmailNode",
        "name": "Send E-Mail: New Critical Temperature",
        "debugMode": false,
        "singletonMode": false,
        "configurationVersion": 0,
        "configuration": {
          "useSystemSmtpSettings": true,
          "smtpHost": "localhost",
          "smtpPort": 25,
          "username": null,
          "password": null,
          "smtpProtocol": "smtp",
          "timeout": 10000,
          "enableTls": false,
          "tlsVersion": "TLSv1.2",
          "enableProxy": false,
          "proxyHost": null,
          "proxyPort": null,
          "proxyUser": null,
          "proxyPassword": null
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 1101,
          "layoutY": 66
        },
        "type": "org.thingsboard.rule.engine.mail.TbMsgToEmailNode",
        "name": "E-Mail: Critical Temperature",
        "debugMode": false,
        "singletonMode": false,
        "configurationVersion": 0,
        "configuration": {
          "fromTemplate": "thungsboard@zimolong.eu",
          "toTemplate": "dhbw@windows3.de",
          "ccTemplate": null,
          "bccTemplate": null,
          "subjectTemplate": "Device ${deviceType}: Critical Temperature",
          "mailBodyType": "false",
          "bodyTemplate": "Device ${deviceName} has critical temperature $[temperature]"
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 304,
          "layoutY": 149
        },
        "type": "org.thingsboard.rule.engine.filter.TbCheckMessageNode",
        "name": "Message contains temperature",
        "debugMode": false,
        "singletonMode": false,
        "configurationVersion": 0,
        "configuration": {
          "messageNames": [
            "temperature"
          ],
          "metadataNames": [],
          "checkAllKeys": true
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 1,
        "type": "True"
      },
      {
        "fromIndex": 0,
        "toIndex": 2,
        "type": "False"
      },
      {
        "fromIndex": 1,
        "toIndex": 4,
        "type": "Created"
      },
      {
        "fromIndex": 4,
        "toIndex": 3,
        "type": "Success"
      },
      {
        "fromIndex": 5,
        "toIndex": 0,
        "type": "True"
      }
    ],
    "ruleChainConnections": null
  }
}